/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Controllers.BillController;
import Entities.Analysis;
import Entities.Bill;
import Entities.Client;
import Entities.Order;
import Entities.Result;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.awt.Toolkit;
import static java.io.FileDescriptor.out;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import static java.lang.System.out;
import java.sql.Date;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.ListModel;
import javax.swing.SwingWorker;
//import static sun.misc.MessageUtils.out;
import utilities.AbstractGuiTableModels;
import utilities.GuiListModels;
import utilities.OrderTableModels;
import java.lang.NullPointerException;

/**
 *
 * @author Alaa Shafshak
 */
public class BillFrame extends javax.swing.JPanel {

    private final GuiListModels<String> listModel = new GuiListModels();
    private final OrderTableModels ordertable = new OrderTableModels();
    private final GuiListModels<Analysis> analyselist = new GuiListModels();
    //private final GuiListModels<Result> resultlist = new GuiListModels<>();
    Result r = null;

    public BillFrame() {
        initComponents();
        initActions();

    }

    private void initActions() {
        analysisList.setModel((ListModel) analyselist);
        clientsList.setModel((ListModel) listModel);
        appointmentsTable.setModel(ordertable);
        participationTextField.setVisible(false);
        saveParticipBtn.setVisible(false);
        particip.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        analysisList = new javax.swing.JList<>();
        participationTextField = new javax.swing.JTextField();
        particip = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        saveParticipBtn = new javax.swing.JButton();
        doneButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        appointmentsTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        searchClientText = new javax.swing.JTextField();
        searchClientBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        clientsList = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel1.setToolTipText("");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setName(""); // NOI18N

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        analysisList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                analysisListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(analysisList);

        participationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                participationTextFieldActionPerformed(evt);
            }
        });

        particip.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        particip.setForeground(new java.awt.Color(22, 113, 185));
        particip.setText("Participation");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(22, 113, 185));
        jLabel5.setText("Orders");

        jSeparator1.setForeground(new java.awt.Color(22, 113, 185));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(22, 113, 185));
        jLabel6.setText("Analysis");

        saveParticipBtn.setText("Save");
        saveParticipBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveParticipBtnActionPerformed(evt);
            }
        });

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        appointmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        appointmentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appointmentsTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(appointmentsTable);
        if (appointmentsTable.getColumnModel().getColumnCount() > 0) {
            appointmentsTable.getColumnModel().getColumn(0).setMinWidth(40);
            appointmentsTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            appointmentsTable.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(particip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(participationTextField)
                                .addComponent(saveParticipBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(doneButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                    .addGap(18, 18, 18)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(particip)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(participationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(saveParticipBtn)
                                    .addGap(62, 62, 62)
                                    .addComponent(doneButton))))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        searchClientText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClientTextActionPerformed(evt);
            }
        });

        searchClientBtn.setText("Search");
        searchClientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClientBtnActionPerformed(evt);
            }
        });

        clientsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientsListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(clientsList);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(22, 113, 185));
        jLabel4.setText("Clients");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(searchClientText, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(40, 40, 40)
                            .addComponent(searchClientBtn))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchClientText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchClientBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchClientTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClientTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchClientTextActionPerformed

    private void searchClientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClientBtnActionPerformed

        String subName = searchClientText.getText();
        new SearchClientPerformed(subName).execute();
    }//GEN-LAST:event_searchClientBtnActionPerformed

    private void clientsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientsListMouseClicked
        if (evt.getClickCount() == 2) {
            if (listModel.isEmpty()) {
                return;
            }
            searchClientText.setText(clientsList.getSelectedValue());

            String[] st = clientsList.getSelectedValue().split(" ");
            String fn = st[0];
            String ln = st[1];

            new AddOrder(fn, ln, false).execute();
        }
    }//GEN-LAST:event_clientsListMouseClicked

    private void appointmentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentsTableMouseClicked
        if (evt.getClickCount() == 2) {
            if (ordertable.isEmpty()) {
                return;
            }
            Order o = ordertable.get(appointmentsTable.getSelectedRow());
            int id = o.getId();
            LocalDate date = o.getDate();

            new AddAnalysis(id).execute();

        }

    }//GEN-LAST:event_appointmentsTableMouseClicked

    private void participationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_participationTextFieldActionPerformed

    }//GEN-LAST:event_participationTextFieldActionPerformed

    private void saveParticipBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveParticipBtnActionPerformed

        if (participationTextField.getText() == null || participationTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Participation field should not be empty",
                    "Entry Error",
                    JOptionPane.ERROR_MESSAGE);
            participationTextField.requestFocus();
            return;
        }
        String s = participationTextField.getText();
        double p = Double.parseDouble(s);

        //r.setParticip(p);
        Object a = analysisList.getSelectedValue();
        String st = a.toString();
        //Double particip = Double.parseDouble(st);

        try {
            int id = new BillController().instance.getAnalysisId(st);
            new SaveWorker(id, p).execute();
        } catch (SQLException ex) {
            Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_saveParticipBtnActionPerformed


    private void analysisListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_analysisListMouseClicked
        if (evt.getClickCount() == 2) {
            participationTextField.setVisible(true);
            saveParticipBtn.setVisible(true);
            particip.setVisible(true);
            if (analyselist.isEmpty()) {
                return;
            }
            Analysis a = analyselist.getElementAt(analysisList.getSelectedIndex());
            int id = a.getId();
            new AddParticip(id).execute();

        }
    }//GEN-LAST:event_analysisListMouseClicked

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        try {
            Order o = ordertable.get(appointmentsTable.getSelectedRow());
            int orderId = o.getId();

            String[] st = clientsList.getSelectedValue().split(" ");
            String fn = st[0];
            String ln = st[1];

            int clientId = BillController.instance.getClientId(fn, ln);

            new BillResultFrame(orderId, clientId).setVisible(true);
         
            
        } catch (SQLException ex) {
            Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_doneButtonActionPerformed

   
    private class SaveWorker extends SwingWorker<String, Void> {

        private int id;
        private double p;

        public SaveWorker(int id, double p) {
            this.id = id;
            this.p = p;
        }

        @Override
        protected String doInBackground() throws Exception {
            new BillController().instance.updateResult(id, p);
            return null;
        }

        @Override
        //@SuppressWarnings("empty-statement")

        public void done() {
            JOptionPane.showMessageDialog(BillFrame.this,
                    "Participation Added",
                    "Succeded",
                    INFORMATION_MESSAGE);

        }
    }

    private class AddParticip extends SwingWorker<String, Void> {

        private final int id;

        public AddParticip(int id) {
            this.id = id;
        }

        @Override
        protected String doInBackground() throws Exception {
            return BillController.instance.findParticip(id);
        }

        @Override
        public void done() {
            participationTextField.setText(null);
            try {
                participationTextField.setText(get());
            } catch (InterruptedException | ExecutionException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private class AddAnalysis extends SwingWorker<List<Analysis>, Void> {

        private final int id;

        public AddAnalysis(int id) {
            this.id = id;

        }

        @Override
        protected List<Analysis> doInBackground() throws Exception {
            return BillController.instance.findAnalysisByOrd(id);
        }

        @Override
        public void done() {
            analyselist.removeAll();
            try {
                analyselist.set(get());
            } catch (InterruptedException | ExecutionException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private class AddOrder extends SwingWorker<List<Order>, Void> {

        private final String first;
        private final String last;
        private final boolean isPayed;

        public AddOrder(String first, String last, boolean isPayed) {
            this.first = first;
            this.last = last;
            this.isPayed = isPayed;
        }

        @Override
        protected List<Order> doInBackground() throws Exception {
            return BillController.instance.findOrd(first, last, isPayed);
        }

        @Override
        public void done() {
            ordertable.removeAll();
            try {
                ordertable.set(get());
            } catch (InterruptedException | ExecutionException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private class SearchClientPerformed extends SwingWorker<List<String>, Void> {

        private final String subName;

        public SearchClientPerformed(String subName) {
            this.subName = subName;
        }

        @Override
        protected List<String> doInBackground() throws Exception {
            return BillController.instance.findClient(subName);
        }

        @Override
        public void done() {
            listModel.removeAll();
            try {
                listModel.set(get());
            } catch (InterruptedException | ExecutionException ex) {
                Logger.getLogger(BillFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> analysisList;
    private javax.swing.JTable appointmentsTable;
    private javax.swing.JList<String> clientsList;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel particip;
    private javax.swing.JTextField participationTextField;
    private javax.swing.JButton saveParticipBtn;
    private javax.swing.JButton searchClientBtn;
    private javax.swing.JTextField searchClientText;
    // End of variables declaration//GEN-END:variables
}
